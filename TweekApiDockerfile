# ---- *.csproj FILES ----
FROM microsoft/aspnetcore-build:1.1.2 as csproj-files
COPY . /src
#RUN find /src -type f -not -name "*.csproj" -delete

# ---- WARM UP NUGET ----
FROM microsoft/aspnetcore-build:1.1.2 as nuget-cache
COPY --from=csproj-files /src /src
COPY ./Tweek.sln /src
RUN dotnet restore ./src/Tweek.sln

# ---- BUILD & TEST ----
FROM nuget-cache as source
COPY . /src
ARG VERSION_SUFFIX
ENV VERSION_SUFFIX ${VERSION_SUFFIX:-dev}
WORKDIR /src

RUN dotnet restore ./Tweek.sln
RUN dotnet build Tweek.sln -c Release --version-suffix "$VERSION_SUFFIX"
RUN find . -regex '.*\.\(Unit\|Integration\|\)Tests\.csproj' -print0 | xargs -0 -n 1 -P 16 dotnet test -c=Release --no-build
RUN dotnet publish ./services/api/Tweek.ApiService.NetCore/Tweek.ApiService.NetCore.csproj  -c Release -o ./obj/Docker/publish --version-suffix "$VERSION_SUFFIX"

# ---- RELEASE ----
FROM microsoft/aspnetcore:1.1.2 as release
WORKDIR /app
EXPOSE 80
COPY --from=source /src/services/api/Tweek.ApiService.NetCore/obj/Docker/publish .
HEALTHCHECK --interval=15s --timeout=15s --retries=8 \
      CMD curl -f http://localhost/health || exit 1
ENTRYPOINT ["dotnet", "Tweek.ApiService.NetCore.dll"]
